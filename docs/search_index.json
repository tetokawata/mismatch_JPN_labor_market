[["index.html", "ハローワークデータからみる労働市場 Chapter 1 要約", " ハローワークデータからみる労働市場 川田恵介 2021-07-31 Chapter 1 要約 公的職業紹介業務（ハローワーク）を通じて収集された業務データ（職業安定業務統計）を用いて、日本の求人・求職の状況を概観する。 "],["記述統計量.html", "Chapter 2 記述統計量 2.1 方法 2.2 Rコード 2.3 結果", " Chapter 2 記述統計量 1963年から2020年までの月次データを用いて、厚生変化を記述する 2.1 方法 期別に集計 季節性を除去するために、前年同月対数差を報告 \\[\\log(Y_{year,quaterly})-\\log(Y_{year-1,quaterly})\\] 2.2 Rコード col.label &lt;- c(&quot;year&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;10&quot;, &quot;11&quot;, &quot;12&quot;, &quot;type&quot;, &quot;group&quot;) select.raw &lt;- 14:63 select.column &lt;- c(1,3:14) raw.vacancy.full &lt;- read_excel(&quot;data/第6表.xlsx&quot;, sheet = &quot;第６表ー２（パート除く）&quot;) %&gt;% .[select.raw,select.column] |&gt; mutate(type = &quot;求人&quot;, group = &quot;フルタイム&quot;) colnames(raw.vacancy.full) &lt;- col.label raw.seeker.full &lt;- read_excel(&quot;data/第7表.xlsx&quot;, sheet = &quot;第７表ー２（パート除く）&quot;) %&gt;% .[select.raw,select.column] |&gt; mutate(type = &quot;求職&quot;, group = &quot;フルタイム&quot;) colnames(raw.seeker.full) &lt;- col.label raw.hir.full &lt;- read_excel(&quot;data/第8表.xlsx&quot;, sheet = &quot;第８表ー２（パート除く）&quot;) %&gt;% .[select.raw,select.column] |&gt; mutate(type = &quot;新規就職&quot;, group = &quot;フルタイム&quot;) colnames(raw.hir.full) &lt;- col.label raw.vacancy.part &lt;- read_excel(&quot;data/第6表.xlsx&quot;, sheet = &quot;第６表ー３（パート）&quot;) %&gt;% .[select.raw,select.column] |&gt; mutate(type = &quot;求人&quot;, group = &quot;パートタイム&quot;) colnames(raw.vacancy.part) &lt;- col.label raw.seeker.part &lt;- read_excel(&quot;data/第7表.xlsx&quot;, sheet = &quot;第７表ー３（パート）&quot;) %&gt;% .[select.raw,select.column] |&gt; mutate(type = &quot;求職&quot;, group = &quot;パートタイム&quot;) colnames(raw.seeker.part) &lt;- col.label raw.hir.part &lt;- read_excel(&quot;data/第8表.xlsx&quot;, sheet = &quot;第８表ー３（パート）&quot;) %&gt;% .[select.raw,select.column] |&gt; mutate(type = &quot;新規就職&quot;, group = &quot;パートタイム&quot;) colnames(raw.hir.part) &lt;- col.label df &lt;- rbind(raw.hir.full, raw.hir.part, raw.vacancy.full, raw.vacancy.part, raw.seeker.full, raw.seeker.part ) |&gt; pivot_longer(cols = 2:13, names_to = &quot;month&quot;, values_to = &quot;n&quot;) |&gt; mutate(n = n |&gt; as.numeric(), year = year |&gt; str_sub(1,4) |&gt; as.numeric(), month = month |&gt; as.numeric(), quaterly = month |&gt; cut(c(0,3,6,9,12), labels = c(1,2,3,4)), date = yq(str_c(year,quaterly,sep = &quot;:Q&quot;)) ) |&gt; group_by(date,type) |&gt; mutate(n = n |&gt; sum()) |&gt; ungroup() |&gt; distinct(year,quaterly,date,type,n) |&gt; spread(key = type, value = n) |&gt; group_by(quaterly) |&gt; mutate(求人 = log(求人) - log(lag(求人)), 求職 = log(求職) - log(lag(求職)), 新規就職 = log(新規就職) - log(lag(新規就職)) ) |&gt; ungroup() |&gt; pivot_longer(cols = c(4:6), names_to = &quot;type&quot;, values_to = &quot;N&quot;) |&gt; na.omit() fig &lt;- df |&gt; ggplot(aes(x = date, y = N) ) + geom_line() + geom_hline(yintercept = 0) + facet_wrap(~type, ncol = 1) + ylab(&quot;&quot;) + xlab(&quot;&quot;) + theme_bw() 2.3 結果 "],["厚生分析時系列比較.html", "Chapter 3 厚生分析:時系列比較 3.1 方法 3.2 Rコード 3.3 結果", " Chapter 3 厚生分析:時系列比較 1963年から2020年までの年次データ、Kawata and Sato (2021) の手法を用いて、求職者の厚生変化を記述する 3.1 方法 同質な求職者・求人からなるモデルを用いて、識別のアイディアを紹介する。 Kawata and Sato (2021) では異質性を導入・非定常であったとしても、同じ識別結果を得れることを示している 標準的なDiamond-Mortencen-Pissarides型サーチモデル(Rogerson, Shimer, and Wright 2005)に準じて、以下の4条件式を仮定する 失業者の価値関数は以下で定義される。 \\[rU=b+\\underbrace{\\Delta}_{サーチ活動の余剰}\\] ただし \\[\\Delta = \\underbrace{\\frac{m}{u}}_{入職率}\\times \\underbrace{(W-U)}_{入職からの余剰}\\] \\(m:\\) 新規就職件数、\\(u:\\)求職者数、\\(U:\\)求職者の期待効用、\\(W:\\)就業者の期待効用、\\(r,b:\\) パラメータ 総余剰をデータから識別することを目指す。 同値はサーチ活動がもたらす期待余剰であり、入職率と入職がもたらす余剰\\(W-U\\)の積として定義されている。 識別の障害となるのは、入職からの余剰をデータから直接観察できない点にある。以下では他の均衡条件を用いることで、この観察できない値の”変化”は復元できることを示している。 求人の価値関数は以下で定義される。 \\[rV=-k+\\frac{m}{v}\\times (J-V)\\] \\(v:\\) 求人数、\\(m/v:\\) 求人の充足率、\\(J:\\) 充足求人の期待利潤、\\(V:\\) 未充足求人の期待利潤、\\(k:\\) パラメータ 自由参入条件は以下で定義される。 \\[V=0\\] この条件は、未充足求人の期待利潤が0になるまで、新規求人が登録されることを仮定している。 ナッシュ交渉 \\[(1-\\beta)(W-U)=\\beta(J-V)\\] \\(\\beta:\\) パラメータ この条件は、マッチングによる余剰が、労働者と企業間でパラメータ\\(\\beta\\)の割合で分配されることを仮定している。同パラメータをデータから推定することは困難であるが、以下の議論は、入職からの期待余剰\\(\\Delta\\)の”変化”の識別は、\\(\\beta\\)の識別を要求しないことを示している。 3.1.1 識別 ナッシュ交渉より、入職からの余剰は以下のように書き換えられる。 \\[\\Delta = \\underbrace{\\frac{m}{u}}_{入職率}\\times \\underbrace{(W-U)}_{入職からの余剰}=\\underbrace{\\frac{m}{u}}_{入職率}\\times \\underbrace{\\frac{\\beta}{1-\\beta}(J-V)}_{入職からの余剰}\\] 自由参入条件からさらに書き換えられる \\[\\Delta = \\underbrace{\\frac{m}{u}}_{入職率}\\times \\underbrace{(W-U)}_{入職からの余剰}=\\underbrace{\\frac{m}{u}}_{入職率}\\times \\underbrace{\\frac{\\beta}{1-\\beta}k\\times\\frac{v}{m}}_{入職からの余剰}\\] 同式からは、新規就職、求人、求職件数とパラメータの積により、新規就職からの余剰は書き下せる ことを示している。 未知のパラメータ(\\(\\beta\\),\\(k\\))を含んでいるため\\(\\Delta\\)そのものをデータから識別することはできないが、この対数差は識別可能である。 異なる状態（2019年 VS 2020年, “With COVID-19” VS “Without COVID-19”等）におけるサーチ活動からの余剰を\\(\\Delta,\\Delta&#39;\\)で記す。この対数差は \\[\\log (\\Delta) - \\log(\\Delta&#39;)=\\underbrace{\\log(\\frac{m&#39;}{u&#39;})-\\log(\\frac{m}{u})}_{入職率の対数変化} + \\underbrace{\\log(\\frac{v&#39;}{m&#39;})-\\log(\\frac{v}{m})}_{入職からの余剰の対数変化} = \\log(\\frac{v&#39;}{u&#39;})-\\log(\\frac{v}{u})\\] 同式職からの余剰は、求人倍率\\(v/u\\)の対数差により識別されることを示している。 さらにサーチ活動からの余剰は入職率、入職からの余剰の対数変化に分解でき、それぞれも新規就職・求人・求職件数のみで識別できることを示している。 3.1.2 時系列比較への応用 以下では前年同月と比べたサーチ活動からの余剰変化を推定している。 例えば2020年4月については、\\(\\Delta=\\) 2020年4月の余剰、\\(\\Delta&#39;=\\) 2019年4月の余剰を示す。 同推定値は、前年に比べて求職者が置かれている状況が、どの程度改善ないし悪化しているのかを示す指標となる。 3.2 Rコード col.label &lt;- c(&quot;year&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;10&quot;, &quot;11&quot;, &quot;12&quot;, &quot;type&quot;, &quot;group&quot;) select.raw &lt;- 14:63 select.column &lt;- c(1,3:14) raw.vacancy.full &lt;- read_excel(&quot;data/第6表.xlsx&quot;, sheet = &quot;第６表ー２（パート除く）&quot;) %&gt;% .[select.raw,select.column] |&gt; mutate(type = &quot;求人&quot;, group = &quot;フルタイム&quot;) colnames(raw.vacancy.full) &lt;- col.label raw.seeker.full &lt;- read_excel(&quot;data/第7表.xlsx&quot;, sheet = &quot;第７表ー２（パート除く）&quot;) %&gt;% .[select.raw,select.column] |&gt; mutate(type = &quot;求職&quot;, group = &quot;フルタイム&quot;) colnames(raw.seeker.full) &lt;- col.label raw.hir.full &lt;- read_excel(&quot;data/第8表.xlsx&quot;, sheet = &quot;第８表ー２（パート除く）&quot;) %&gt;% .[select.raw,select.column] |&gt; mutate(type = &quot;新規就職&quot;, group = &quot;フルタイム&quot;) colnames(raw.hir.full) &lt;- col.label raw.vacancy.part &lt;- read_excel(&quot;data/第6表.xlsx&quot;, sheet = &quot;第６表ー３（パート）&quot;) %&gt;% .[select.raw,select.column] |&gt; mutate(type = &quot;求人&quot;, group = &quot;パートタイム&quot;) colnames(raw.vacancy.part) &lt;- col.label raw.seeker.part &lt;- read_excel(&quot;data/第7表.xlsx&quot;, sheet = &quot;第７表ー３（パート）&quot;) %&gt;% .[select.raw,select.column] |&gt; mutate(type = &quot;求職&quot;, group = &quot;パートタイム&quot;) colnames(raw.seeker.part) &lt;- col.label raw.hir.part &lt;- read_excel(&quot;data/第8表.xlsx&quot;, sheet = &quot;第８表ー３（パート）&quot;) %&gt;% .[select.raw,select.column] |&gt; mutate(type = &quot;新規就職&quot;, group = &quot;パートタイム&quot;) colnames(raw.hir.part) &lt;- col.label df &lt;- rbind(raw.hir.full, raw.hir.part, raw.vacancy.full, raw.vacancy.part, raw.seeker.full, raw.seeker.part ) |&gt; pivot_longer(cols = 2:13, names_to = &quot;month&quot;, values_to = &quot;n&quot;) |&gt; mutate(n = n |&gt; as.numeric(), year = year |&gt; str_sub(1,4) |&gt; as.numeric(), month = month |&gt; as.numeric(), quaterly = month |&gt; cut(c(0,3,6,9,12), labels = c(1,2,3,4)), date = yq(str_c(year,quaterly,sep = &quot;:Q&quot;)) ) |&gt; group_by(date,type) |&gt; mutate(n = n |&gt; sum()) |&gt; ungroup() |&gt; distinct(year,quaterly,date,type,n) |&gt; spread(key = type, value = n) |&gt; group_by(quaterly) |&gt; mutate(入職率 = log(新規就職/求職) - log(lag(新規就職/求職)), マッチングの余剰 = log(lag(新規就職/求人)) - log(新規就職/求人), 総余剰 = log(求人/求職) - log(lag(求人/求職)) ) |&gt; ungroup() |&gt; select(-求職, -求人, -新規就職) |&gt; pivot_longer(cols = c(4:6), names_to = &quot;type&quot;, values_to = &quot;N&quot;) |&gt; na.omit() fig &lt;- df |&gt; ggplot(aes(x = date, y = N) ) + geom_line() + geom_hline(yintercept = 0) + facet_wrap(~factor(type, levels = c(&quot;マッチングの余剰&quot;, &quot;入職率&quot;, &quot;総余剰&quot;)), ncol = 1) + ylab(&quot;&quot;) + xlab(&quot;&quot;) + theme_bw() 3.3 結果 References "],["session-information.html", "Chapter 4 Session information", " Chapter 4 Session information sessionInfo() ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 10 x64 (build 19042) ## ## Matrix products: default ## ## locale: ## [1] LC_COLLATE=Japanese_Japan.932 LC_CTYPE=Japanese_Japan.932 ## [3] LC_MONETARY=Japanese_Japan.932 LC_NUMERIC=C ## [5] LC_TIME=Japanese_Japan.932 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] knitr_1.33 lubridate_1.7.10 readxl_1.3.1 forcats_0.5.1 ## [5] stringr_1.4.0 dplyr_1.0.7 purrr_0.3.4 readr_1.4.0 ## [9] tidyr_1.1.3 tibble_3.1.2 ggplot2_3.3.5 tidyverse_1.3.1 ## ## loaded via a namespace (and not attached): ## [1] tidyselect_1.1.1 xfun_0.24 bslib_0.2.5.1 haven_2.4.1 ## [5] colorspace_2.0-1 vctrs_0.3.8 generics_0.1.0 htmltools_0.5.1.1 ## [9] yaml_2.2.1 utf8_1.2.1 rlang_0.4.11 jquerylib_0.1.4 ## [13] pillar_1.6.1 withr_2.4.2 glue_1.4.2 DBI_1.1.1 ## [17] dbplyr_2.1.1 modelr_0.1.8 lifecycle_1.0.0 munsell_0.5.0 ## [21] gtable_0.3.0 cellranger_1.1.0 rvest_1.0.0 evaluate_0.14 ## [25] labeling_0.4.2 fansi_0.5.0 highr_0.9 broom_0.7.8 ## [29] Rcpp_1.0.6 backports_1.2.1 scales_1.1.1 jsonlite_1.7.2 ## [33] farver_2.1.0 fs_1.5.0 hms_1.1.0 digest_0.6.27 ## [37] stringi_1.6.1 bookdown_0.22 grid_4.1.0 cli_2.5.0 ## [41] tools_4.1.0 magrittr_2.0.1 sass_0.4.0 pacman_0.5.1 ## [45] crayon_1.4.1 pkgconfig_2.0.3 ellipsis_0.3.2 xml2_1.3.2 ## [49] reprex_2.0.0 assertthat_0.2.1 rmarkdown_2.9 httr_1.4.2 ## [53] rstudioapi_0.13 R6_2.5.0 compiler_4.1.0 "],["references.html", "References", " References "]]
